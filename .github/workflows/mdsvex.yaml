name: mdsvex

on: [push, pull_request]

jobs:

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: lint-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            lint-yarn-
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12 
      - run: yarn --frozen-lockfile      
      - run: yarn lint
        env:
          CI: true
          name: mdsvex

  build-test:
    name: test-build - node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10, 12]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn --frozen-lockfile
      - run: yarn test
      - run: yarn build
        env:
          CI: true
          name: mdsvex
